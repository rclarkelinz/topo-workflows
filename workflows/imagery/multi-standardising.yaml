apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: test-multi-standardising-v0.2.0-44
  namespace: argo
spec:
  serviceAccountName: workflow-creator-sa
  entrypoint: main
  arguments:
    parameters:
      - name: source
        value: "s3://linz-imagery-staging/test/"
      - name: include
        value: ".tiff?$"
      - name: compression
        value: "webp"
        enum:
          - "webp"
          - "lzw"
      - name: group
        value: 10
      - name: workflowtemplate
        value: "imagery-standardising-v0.2.0-44"
  templates:
    - name: main
      dag:
        tasks:
          - name: aws-list
            template: aws-list
          - name: trigger-wf-standardising
            template: trigger-wf-standardising
            arguments:
              parameters:
                - name: source
                  value: "{{item}}"
            depends: "aws-list"
            withParam: "{{tasks.aws-list.outputs.parameters.files}}"
    - name: aws-list
      container:
        image: ghcr.io/linz/argo-tasks:v1.0.0-18-gea46732
        command: [node, /app/index.cjs]
        env:
          - name: AWS_ROLE_CONFIG_PATH
            value: s3://linz-bucket-config/config-v2.json
        args:
          [
            "list",
            "--verbose",
            "--include",
            "\\/$",
            "--group",
            "1",
            "--output",
            "/tmp/file_list.json",
            "{{workflow.parameters.source}}",
          ]
      outputs:
        parameters:
          - name: files
            valueFrom:
              path: /tmp/file_list.json
    - name: trigger-wf-standardising
      inputs:
        parameters:
          - name: source
      resource:
        action: create
        manifest: |
          apiVersion: argoproj.io/v1alpha1
          kind: Workflow
          metadata:
            generateName: test-{{workflow.parameters.workflowtemplate}}-
          spec:
            arguments:
              parameters:
              - name: source
                value: {{inputs.parameters.source}}
              - name: include
                value: {{workflow.parameters.include}}
              - name: group
                value: {{workflow.parameters.group}}
              - name: compression
                value: {{workflow.parameters.compression}}
            workflowTemplateRef:
              name: {{workflow.parameters.workflowtemplate}}
        successCondition: status.phase == Succeeded
        failureCondition: status.phase in (Failed, Error)
